// Template de debug completo
async function testImageAccess() {
  const testUrls = [
    "https://raw.githubusercontent.com/gustavocabraltv/templates-imgs/main/imagem.png",
    "https://via.placeholder.com/300x200.png", // URL de teste conhecida
    "https://httpbin.org/image/png" // Outro teste
  ];
  
  console.log('=== INICIANDO TESTES DE ACESSO ===');
  
  for (let i = 0; i < testUrls.length; i++) {
    const url = testUrls[i];
    console.log(`\n--- Teste ${i + 1}: ${url} ---`);
    
    try {
      console.log('Fazendo fetch...');
      const response = await fetch(url);
      
      console.log('Status:', response.status);
      console.log('Headers:', Object.fromEntries(response.headers.entries()));
      
      if (response.ok) {
        const arrayBuffer = await response.arrayBuffer();
        console.log('Tamanho do arquivo:', arrayBuffer.byteLength, 'bytes');
        
        if (arrayBuffer.byteLength > 0) {
          const imageBytes = new Uint8Array(arrayBuffer);
          console.log('Primeiros 10 bytes:', Array.from(imageBytes.slice(0, 10)));
          
          try {
            const image = figma.createImage(imageBytes);
            console.log('✅ Sucesso! Hash:', image.hash);
            return { success: true, hash: image.hash, url };
          } catch (createError) {
            console.log('❌ Erro ao criar imagem:', createError);
          }
        } else {
          console.log('❌ Arquivo vazio');
        }
      } else {
        console.log('❌ Resposta não OK');
      }
    } catch (fetchError) {
      console.log('❌ Erro no fetch:', fetchError);
    }
  }
  
  return { success: false };
}

async function main() {
  console.log('=== TESTE DE ACESSO A IMAGENS ===');
  
  // Primeiro, testar acesso às URLs
  const testResult = await testImageAccess();
  
  // Criar retângulo
  const rectangle = figma.createRectangle();
  figma.currentPage.appendChild(rectangle);
  rectangle.resize(400, 300);
  rectangle.name = "Teste de Imagem";
  rectangle.x = 0;
  rectangle.y = 0;
  
  if (testResult.success) {
    console.log('Aplicando imagem que funcionou...');
    rectangle.fills = [{
      type: "IMAGE",
      imageHash: testResult.hash,
      scaleMode: "FILL"
    }];
    
    // Adicionar texto de sucesso
    const textSuccess = figma.createText();
    textSuccess.characters = `✅ Imagem carregada!\nURL: ${testResult.url}`;
    textSuccess.fontSize = 12;
    textSuccess.fills = [{ type: "SOLID", color: { r: 0, g: 0.8, b: 0 } }];
    textSuccess.x = 0;
    textSuccess.y = 320;
    figma.currentPage.appendChild(textSuccess);
    
  } else {
    console.log('Nenhuma imagem funcionou - criando placeholder');
    
    // Criar placeholder visual
    rectangle.fills = [{ 
      type: "SOLID", 
      color: { r: 0.9, g: 0.9, b: 0.9 } 
    }];
    rectangle.strokes = [{ 
      type: "SOLID", 
      color: { r: 0.8, g: 0.2, b: 0.2 } 
    }];
    rectangle.strokeWeight = 2;
    
    // Adicionar texto de erro
    const textError = figma.createText();
    textError.characters = "❌ Nenhuma imagem pôde ser carregada\nVerifique o console para detalhes";
    textError.fontSize = 12;
    textError.fills = [{ type: "SOLID", color: { r: 0.8, g: 0.2, b: 0.2 } }];
    textError.textAlignHorizontal = "CENTER";
    textError.x = 50;
    textError.y = 140;
    figma.currentPage.appendChild(textError);
  }
  
  console.log('=== TESTE FINALIZADO ===');
}

main();